{"ast":null,"code":"var _jsxFileName = \"/Users/katerina/Documents/Integrify/bof-budget-control-app/src/Components/Money.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, TextField, Button, styled } from '@mui/material';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport \"../styles/money.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Money = _ref => {\n  _s();\n  let {\n    option,\n    list,\n    setList\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [date, setDate] = useState(\"\");\n  const onSubmit = e => {\n    e.preventDefault();\n    setList([{\n      amount,\n      date,\n      title,\n      id: Date.now()\n    }, ...list]);\n  };\n  const MoneyList = styled;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    autoComplete: \"off\",\n    onSubmit: e => onSubmit(e),\n    sx: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      required: true,\n      label: `${option} Source`,\n      variant: \"standard\",\n      onChange: e => setTitle(e.target.value),\n      value: title,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      required: true,\n      label: `Amount of ${option}`,\n      variant: \"filled\",\n      onChange: e => setAmount(Number(e.target.value)),\n      type: \"number\",\n      InputLabelProps: {\n        shrink: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      required: true,\n      label: `Date of ${option}`,\n      variant: \"filled\",\n      onChange: e => setDate(e.target.value),\n      value: date,\n      type: \"date\",\n      InputLabelProps: {\n        shrink: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"outlined\",\n      startIcon: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 20\n      }, this),\n      color: \"secondary\",\n      size: \"small\",\n      className: \"save-btn\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.length > 0 && list.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", item.title, \" , \", item.amount, \" , \", item.date]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Money, \"AyPru0Qb2wshpbhOqlSMfoe9t5o=\");\n_c = Money;\nexport default Money;\nvar _c;\n$RefreshReg$(_c, \"Money\");","map":{"version":3,"names":["React","useState","Box","TextField","Button","styled","AddCircleIcon","Money","option","list","setList","title","setTitle","amount","setAmount","date","setDate","onSubmit","e","preventDefault","id","Date","now","MoneyList","display","flexDirection","gap","target","value","Number","shrink","length","map","item"],"sources":["/Users/katerina/Documents/Integrify/bof-budget-control-app/src/Components/Money.tsx"],"sourcesContent":["import { ClientRequest } from 'http'\nimport React, { useState } from 'react'\nimport { MoneyProps } from '../types/money'\nimport { Box, TextField, Button, List, ListItem, styled } from '@mui/material'\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\n\nimport \"../styles/money.css\"\n\nconst Money = ({option, list, setList}: MoneyProps) => {\n    const [title, setTitle] = useState(\"\")\n    const [amount, setAmount] = useState(0)\n    const [date, setDate] = useState(\"\")\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault()\n        setList([{amount, date, title, id: Date.now() }, ...list])\n    }\n\n    const MoneyList = styled\n   \n  return (\n    <Box\n    component=\"form\"\n    autoComplete=\"off\"\n    onSubmit={(e)=>onSubmit(e)}\n    sx={{display: \"flex\", flexDirection: \"column\",  gap: 2}}\n    >\n        <TextField\n        required\n          label= {`${option} Source`}\n          variant=\"standard\"\n          onChange={(e)=> setTitle(e.target.value)}\n          value={title}\n          type=\"text\"\n        />\n        <TextField\n        required\n          label= {`Amount of ${option}`}\n          variant=\"filled\"\n          onChange={(e) => setAmount(Number(e.target.value))}\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n        required\n          label= {`Date of ${option}`}\n          variant=\"filled\"\n          onChange={(e) => setDate(e.target.value)}\n          value={date}\n          type=\"date\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <Button \n        type='submit'\n        variant=\"outlined\"\n        startIcon={<AddCircleIcon />}\n        color=\"secondary\"\n        size=\"small\"\n        className=\"save-btn\"\n     \n        >Save</Button>\n        <ul>\n    {\n        list.length > 0 && list.map(\n            item => (\n                <li key={item.id}> {item.title} , {item.amount} , {item.date}</li>\n            )\n        ) \n    }\n        </ul>\n    </Box>\n  )\n}\n\nexport default Money"],"mappings":"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"},"metadata":{},"sourceType":"module"}